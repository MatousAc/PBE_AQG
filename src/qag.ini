[general]
quiet: False
ignoreWarnings: True
# QG|AE
trainFor: AE
# text|chat
modelType: chat
modelSize: 7
# modes: test|norm 
mode: norm

[model]
addCustomTokens: False
# optimize only the model completion (answers/questions)
# see https://github.com/huggingface/trl/issues/426 && .../trl/pull/445
optimizeCompletion: True
# packs several examples into one training input. SFTTrainer uses an EOS
# token to separate examples. forced to False when trainForCompletionOnly = True
packing: False


[dataFormatter]
delim: ###
# we MUST begin with <s> and a space for the tokenizer to match the
# tokens for respTempl below with the ones produced in the full input
respTempleAE: <s> ${delim} Extract potential answers to questions and return them separated by <sep>. ${delim} Verse: <context> ${delim} Potential answers: <answer>
respKeyAE: ${delim} Potential answers:
respTempleQG: <s> ${delim} Write a question for the context and answer. ${delim} Verse: <context> ${delim} Answer: <answer> ${delim} Question: <question>
respKeyQG: ${delim} Question:

# manual|generate
sampleMode: generate
evalToTrainRatio: 0.01
qualityThreshold: 7

[paths]
base: /models/llama-hf/7b-${general:modelType}
output: /models/output/${general:mode}/${general:modelSize}b-${general:modelType}${general:trainFor}
data: /data/pbe/${general:trainFor}
log: /data/logs
# dataProcessor paths (specify files)
dpSource: /data/pbe/clean/contextQuestions.csv
dpDest: /data/pbe/AE/data.jsonl

# tunable hyperparameters
[hyperparameters]
# LORA
# r = matrix rank: size of matrices "on the side" of
# FFW determines how many parameters get fine-tuned
# 32|64|128|256
r: 64
# scaling factor
# 16|32|64|128
loraAlpha: 16
# none|all|lora_only
bias: none
loraDropout: 0.05
# what all to train: query, value, key, o_proj. use first letters
loraLayers: qv
# General hyperparameters
learningRate: 2e-4
weightDecay: 0.01
# multiple epochs decrease performance due to overfitting
epochs: 1

# general setting for training
[trainArgs]
# controls for how often to stop to evaluate|save|log the model
# no|steps|epoch
saveStrategy: epoch
evalStrategy: steps
stepSize: 50
testSteps: 2
# output length
maxSeqLength: 512

# refers to how large the batches are per each GPU
perDeviceTrainBatchSize: 2
# how many predictions steps to accumulate the output tensors for on the GPU,
# before moving the results to the CPU. If None, all predictions are accumulated
# on GPU. higher numbers are faster but can throw 'Out of Memory' errors)
gradientAccumulationSteps: 10
evalAccumulationSteps: 10

# number of most recent checkpoints to save
saveTotalLimit: 1
# whether to keep around the best model
loadBestModelAtEnd: False
# whether to use bleu, rouge, and meteor for eval instead of the default computeAccuracy
generativeEval: True

[eval]
# bleu|meteor|rouge
evalMetric: bleu